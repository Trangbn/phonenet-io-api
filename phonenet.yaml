{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Phonenet APIs",
    "description" : "This is Phonenet API on sandbox environment. For this sample, you can use the api key to test the authorization filters. For the product environment, use this server  https://clientapi.phonenet.io.",
    "termsOfService" : "http://swagger.io/terms/",
    "contact" : {
      "email" : "trangbn@gadget.com.vn"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://clientapidev.phonenet.io",
    "description" : "Phonenet API Auto Mocking"
  } ],
  "security" : [ {
    "api_key" : [ "token" ]
  } ],
  "tags" : [ {
    "name" : "customer",
    "description" : "These APIs support to create, get and update contact of customer. To use \"Click to call\" for creating a fast call please refer this document:[Phonenet SDK](https://github.com/gadgetvn/phonenet-sdk)"
  }, {
    "name" : "opportunity",
    "description" : "These APIs support to create, get and update information of opportunity"
  } ],
  "paths" : {
    "/opportunity" : {
      "get" : {
        "tags" : [ "opportunity" ],
        "summary" : "Get the contact list of customers",
        "operationId" : "getOpportunity",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "The beginning position of list",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number record per page",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status of opportunity",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "keyword",
          "in" : "query",
          "description" : "The search keyword",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group",
          "in" : "query",
          "description" : "The group which has opportunity",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customer",
          "in" : "query",
          "description" : "The customer name",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "user",
          "in" : "query",
          "description" : "The person in charge for opportunity",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "time",
          "in" : "query",
          "description" : "Time at creation or updating (createTime,updateTime)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "Create time from",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "Create time to",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort order:\n * `createTimeDESC` - New to old\n * `createTimeASC` - Old to new\n * `updateTimeDESC` - Recently update\n * `updateTimeASC` - Not recently update\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "createTimeDESC", "createTimeASC", "updateTimeDESC", "updateTimeASC" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "headers" : {
              "X-Rate-Limit" : {
                "description" : "calls per hour allowed by the user",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              },
              "X-Expires-After" : {
                "description" : "date in UTC when token expires",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid username/password supplied"
          }
        }
      },
      "post" : {
        "tags" : [ "opportunity" ],
        "summary" : "Create new opportunity",
        "operationId" : "createOpportunity",
        "requestBody" : {
          "description" : "Optional description in *Markdown*",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Opportunity"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/opportunity/{id}/status" : {
      "put" : {
        "tags" : [ "opportunity" ],
        "summary" : "Update status of opportunity",
        "operationId" : "update status of opportunity",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of opportunity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Optional description in *Markdown*",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Opportunity"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "headers" : {
              "X-Rate-Limit" : {
                "description" : "calls per hour allowed by the user",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              },
              "X-Expires-After" : {
                "description" : "date in UTC when token expires",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid username/password supplied"
          }
        }
      }
    },
    "/opportunity/{id}" : {
      "get" : {
        "tags" : [ "opportunity" ],
        "summary" : "Get the specific opportunity by id",
        "operationId" : "getOpportunityById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of opportunity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "headers" : {
              "X-Rate-Limit" : {
                "description" : "calls per hour allowed by the user",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              },
              "X-Expires-After" : {
                "description" : "date in UTC when token expires",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid username/password supplied"
          }
        }
      },
      "put" : {
        "tags" : [ "opportunity" ],
        "summary" : "Update opportunity",
        "operationId" : "updateOpportunity",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of opportunity",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Optional description in *Markdown*",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Opportunity"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/customer" : {
      "get" : {
        "tags" : [ "customer" ],
        "summary" : "Get customer contacts",
        "parameters" : [ {
          "name" : "findIn",
          "in" : "query",
          "description" : "Sort order:\n * `contact` - Contact info\n * `customer` - Customer info\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "contact", "customer" ]
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The beginning position of list",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "keyword",
          "in" : "query",
          "description" : "Search keyword",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group",
          "in" : "query",
          "description" : "Search by group",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "user",
          "in" : "query",
          "description" : "Search by id of assignee",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort order:\n * `createTimeDESC` - New to old\n * `createTimeASC` - Old to new\n * `updateTimeDESC` - Recently update\n * `updateTimeASC` - Not recently update\n * `nameASC` - Name A to Z\n * `nameDESC` - Name Z to A\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "createTimeDESC", "createTimeASC", "updateTimeDESC", "updateTimeASC", "nameASC", "nameDESC" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "headers" : {
              "X-Rate-Limit" : {
                "description" : "calls per hour allowed by the user",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              },
              "X-Expires-After" : {
                "description" : "date in UTC when token expires",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid username/password supplied"
          }
        }
      },
      "post" : {
        "tags" : [ "customer" ],
        "summary" : "Create new customer",
        "operationId" : "createCustomer",
        "requestBody" : {
          "description" : "Optional description in *Markdown*",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/user" : {
      "get" : {
        "tags" : [ "customer" ],
        "summary" : "Get the contact list of internal customer",
        "operationId" : "internalCustomer",
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "description" : "Status of internal customer (\"active\" - 0)",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The beginning position of list",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of records per page",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "keyword",
          "in" : "query",
          "description" : "Search by keyword",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group",
          "in" : "query",
          "description" : "Search by group",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort order:\n * `createTimeDESC` - New to old\n * `createTimeASC` - Old to new\n * `nameASC` - Name A to Z\n * `nameDESC` - Name Z to A\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "createTimeDESC", "createTimeDESC", "nameASC", "nameDESC" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "headers" : {
              "X-Rate-Limit" : {
                "description" : "calls per hour allowed by the user",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              },
              "X-Expires-After" : {
                "description" : "date in UTC when token expires",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid username/password supplied"
          }
        }
      }
    },
    "/contact" : {
      "get" : {
        "tags" : [ "customer" ],
        "summary" : "Get contact customer by phone number",
        "operationId" : "clickCall",
        "parameters" : [ {
          "name" : "phone",
          "in" : "query",
          "description" : "Dialing phone number",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The beginning position of list",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of record per page",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "make call successfully"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Customer" : {
        "type" : "object",
        "properties" : {
          "client" : {
            "type" : "number"
          },
          "user" : {
            "type" : "number"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          },
          "name" : {
            "type" : "string"
          },
          "desc" : {
            "type" : "string"
          },
          "mainContact" : {
            "type" : "number"
          },
          "createTime" : {
            "type" : "number"
          },
          "updateTime" : {
            "type" : "number"
          },
          "customFields" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Customer_customFields"
            }
          }
        }
      },
      "Opportunity" : {
        "type" : "object",
        "properties" : {
          "client" : {
            "type" : "number"
          },
          "customer" : {
            "type" : "number"
          },
          "contact" : {
            "type" : "number"
          },
          "user" : {
            "type" : "number"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          },
          "name" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "number"
          },
          "status" : {
            "type" : "string"
          },
          "createTime" : {
            "type" : "number"
          },
          "updateTime" : {
            "type" : "number"
          },
          "confidence" : {
            "type" : "number"
          },
          "estimatedCloseTime" : {
            "type" : "number"
          },
          "wonTime" : {
            "type" : "number"
          },
          "lostTime" : {
            "type" : "number"
          },
          "cancelTime" : {
            "type" : "number"
          },
          "notifyTime" : {
            "type" : "number"
          }
        }
      },
      "Customer_customFields" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      }
    },
    "requestBodies" : {
      "UserArray" : {
        "description" : "List of user object",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Customer"
              }
            }
          }
        },
        "required" : true
      }
    },
    "securitySchemes" : {
      "api_key" : {
        "type" : "apiKey",
        "name" : "token",
        "in" : "header"
      }
    }
  }
}